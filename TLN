TLN
===

TODO:

- move eventQueue inside serviceEntity

- remove .now from timelines in favor of the actual now of the state.
- eventQueue: Events received need to get time update

- Timeline (FLOAT/VALUE):
  - replace update/host msg with a Proto
  - test update with older removal T.F/T.V
  - test update forward interpolation T.F

- Proxy object that tracks a particular object
- State logic for timeline syncing
- master eval loop...

- full entity creation sync (for new players)?

- time-based master commands.

- Subclass Timeline for Float/Value?

- commDeepstream
- commWebRTC (over XMPP?)

- matchmaking solution?
- mid-game connection / disconnection
- url matching
- support for turn based games

WEBRTC:
- https://github.com/feross/simple-peer
- https://deepstreamhub.com/tutorials/protocols/webrtc-datachannels/


SAMPLE:

tln.register("ball", ballCreate, ["x","y","vx","vy"], ["color"]);

var b = tln.create(null, "ball", [0, 0, 100, 100, "#FF0000"]);

requestAnimationFrame(dt => {

});
